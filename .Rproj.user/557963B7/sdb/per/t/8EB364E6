{
    "contents" : "\nif(!require(rms)) {\n  install.packages(\"rms\")} \n\n#if(!require(pracma)) {\n#  install.packages(\"pracma\")}\n\nerf <- function(x) 2 * pnorm(x * sqrt(2)) - 1\n\nshinyServer(function(input, output){\n  require(survival)\n  require(rms)\n  require(pracma)\n  require(dynpred)\n  output$dist <- renderPlot({\n    \n    if (input$radio == 1){\n      r <- input$rate\n      x <- seq(0, 4, length=1000)\n      y <- dexp(x, r)\n      plot(x, y, type=\"l\", lwd=2, xlab=\"Time\", ylab=\"Density\", main=\"Distribution\")\n    }\n    if (input$radio == 2){\n      sh <- input$shape\n      s <- input$scale\n      x <- seq(0, 4, length=1000)\n      y <- dweibull(x,sh,s)\n      plot(x, y, type=\"l\", lwd=2, xlab=\"Time\", ylab=\"Density\", main=\"Distribution\")\n    }\n    if (input$radio == 3){\n      sh <- input$shape2\n      s <- input$scale2\n      x <- seq(0, 10, length=1000)\n      y <- dweibull(x,sh,s)\n      plot(x, y, type=\"l\", lwd=2, xlab=\"Time\", ylab=\"Density\", main=\"Distribution\")\n    }\n    if (input$radio == 4){\n      m <- input$mean\n      sd <- input$sd\n      x <- seq(0, 10, length=1000)\n      y <- dlnorm(x,m,sd)\n      plot(x, y, type=\"l\", lwd=2, xlab=\"Time\", ylab=\"Density\", main=\"Distribution\")\n    }\n  })\n  \n  output$dynpred <- renderPlot({\n    if (input$radio == 1){\n      ##### stable hazard function (exp(rate=r))\n      par(mfrow=c(2,2))\n      r <- input$rate\n      p <- input$cen /100\n      \n      ## survival\n      # find uniform upper bound in the stable scenario\n      fpoint.exp <- function(p0,l,p){\n        pold <- p0\n        pnew <-  (1 - exp(-l*pold))/(l*p) # iteration function\n        iter <- 1\n        while ((abs(pnew - pold) > 1E-9) && (iter < 1000)){\n          pold <- pnew\n          pnew <- (1 - exp(-l*pold))/(l*p) \n          iter <- iter + 1\n          return(pnew)\n      }\n      }\n      b <- fpoint.exp(10, l=r, p=p) # = b\n      # simulate survival data in the stable scenario\n      sim.exp <- function(n,l,b){\n        t <- rexp(n, l)     # l is exp rate parameter\n        c <- runif(n,0,b)   # b is uniform upper bound parameter\n        time <- apply(data.frame(t=t,c=c),1,min)\n        ind <- numeric(n)\n        for (i in 1:n){\n          if(time[i]==t[i]) ind[i] <- 1\n        }\n        p <- sum(1 - ind) / n  # p is censoring percentage\n        cat(\"censoring percentage is %\", p * 100 , sep= \"\", \"\\n\")\n        return(data = data.frame(time = time, status = ind))\n      }\n      data.exp <- sim.exp(input$s.size, l=r, b=b)\n      km.exp <- npsurv(Surv(time, status) ~ 1, data=data.exp) \n      \n      if (input$sim == TRUE){\n        survplot(km.exp,main=\"Survivor\",col=\"red\",xlab=\"Time\")  ## type=\"l\"\n        curve( ( 1 - pexp(x,r) ), add = TRUE, xlab=\"Time\",ylab=\"Probability\",lwd=2,ylim=c(0,1))\n      }\n      if (input$sim == FALSE){\n        curve( ( 1 - pexp(x,r) ), main=\"Survivor\", xlab=\"Time\",ylab=\"Survival Probability\",xlim=c(0,km.exp$maxtime),lwd=2,ylim=c(0,1))\n      }\n      \n      ## hazard\n      curve( dexp(x,r) / ( 1 - pexp(x,r) ), ylim=c(0,4), main=\"Hazard\",xlab=\"Time\",ylab=\"Risk\",lwd=2,xlim=c(0,1))\n      \n      ## MRL in the stable scenario\n      Emrl.exp<-function (u) {\n        nu<-integrate(function (x) 1 - pexp(x,r),u,Inf)$value   \n        de<-1 - pexp(u,r)\n        if (de == 0) return(0)\n        nu/de\n      }\n      xx<-seq(0,1,length.out=100)\n      yy<-sapply(xx,Emrl.exp)\n      plot(xx,round(yy,4),type=\"l\" ,main=\"MRL\",xlab=\"Time\",ylab=\"Time remaining\",lwd=2,xlim=c(0,1))\n      \n      ## dynpred\n      w <- input$slider\n      if (input$sim == TRUE){\n        c0 <- coxph(Surv(time, status) ~ 1, data = data.exp, method = \"breslow\")\n        sf0 <- survfit(c0)\n        Fw <- Fwindow(sf0, input$slider)\n        x <- seq(0,2,0.1)\n        plot(Fw$time, Fw$Fw, type=\"s\", col=\"red\",ylim = c(0, max(1 - ((1 - pexp(x+w,r))/( 1 - pexp(x,r))),Fw$up)), main = paste(\"Probability of dying with a window of\", input$slider),\n             xlab = \"Time surviving\", ylab = \"Probability of dying\", lwd = 2)\n        curve(1 - (( 1 - pexp(x+w,r) ) / ( 1 - pexp(x,r)) ),add = TRUE,main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n      }\n      if (input$sim == FALSE){\n        curve(1 - (( 1 - pexp(x+w,r) ) / ( 1 - pexp(x,r)) ),main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2,xlim=c(0,2),ylim=c(0,1))\n      }\n    }\n    \n    if (input$radio == 2){\n      ##### Recovery hazard function (weibull(shape=sh, scale=s))\n      par(mfrow=c(2,2))\n      sh <- input$shape\n      s <- input$scale\n      p <- input$cen /100\n      \n      ## survival\n      # uniform upper bound recovery scenario\n      ub.w1 <- function(s,sh,p){\n        n <- 100\n        d <- c(seq(0.01,10,0.01), seq(10.1,100,0.1), seq(101,1000,1))\n        pr <- numeric(1)\n        y <- numeric(n)\n        a <- 0\n        dnew <- 0\n        for(i in 1:2800){\n          for (j in 1:n){\n            y[j] <- runif(1,0,d[i])\n          }\n          pr <- sum(exp(-(y/s)^sh))/n\n          if ((abs(pr - p) < 0.05)){\n            dnew <- dnew + d[i]\n            a <- a + 1\n          }\n        }\n        dnew/a\n      }\n      b <- ub.w1(s, sh, p) # = b\n      # simulate survival data in the stable Recovery\n      sim.w1 <- function(n,sh,s,b){\n        t <- rweibull(n,sh,s)     # sh and s are weibull parameters\n        c <- runif(n,0,b)   # b is uniform upper bound parameter\n        time <- apply(data.frame(t=t,c=c),1,min)\n        ind <- numeric(n)\n        for (i in 1:n){\n          if(time[i]==t[i]) ind[i] <- 1\n        }\n        p <- sum(1 - ind) / n  # p is censoring percentage\n        cat(\"censoring percentage is %\", p * 100 , sep= \"\", \"\\n\")\n        return(data = data.frame(time = time, status = ind))\n      }\n      data.w1 <- sim.w1(input$s.size, sh, s, b=b)\n      km.w1 <- npsurv(Surv(time, status) ~ 1, data=data.w1) \n      \n      if (input$sim == TRUE){\n        survplot(km.w1,main=\"Survivor\",col=\"red\",xlab=\"Time\")  ## type=\"l\"\n        curve( ( 1 - pweibull(x,sh,s) ), add = TRUE, xlab=\"Time\",ylab=\"Probability\",lwd=2,ylim=c(0,1))\n      }\n      if (input$sim == FALSE){\n        curve( ( 1 - pweibull(x,sh,s) ), main=\"Survivor\", xlab=\"Time\",ylab=\"Survival Probability\",xlim=c(0,km.w1$maxtime),lwd=2,ylim=c(0,1))\n      }\n          \n      ## hazard\n      curve( dweibull(x,sh,s) / ( 1 - pweibull(x,sh,s) ),main=\"Hazard\",xlab=\"Time\",ylab=\"Risk\",lwd=2,xlim=c(0,5))\n      \n      ## MRL in the recovery scenario\n      Emrl.w1<-function (u) {\n        nu<-integrate(function (x) 1 - pweibull(x,sh,s),u,Inf)$value   \n        de<-1 - pweibull(u,sh,s)\n        if (de == 0) return(0)\n        nu/de\n      }\n      xx<-seq(0,5,length.out=100)\n      yy<-sapply(xx,Emrl.w1)\n      plot(xx,round(yy,4),type=\"l\", main=\"MRL\",xlab=\"Time\",ylab=\"Time remaining\",lwd=2,xlim=c(0,5))\n      \n      ## dynpred\n      w<-input$slider\n      if (input$sim == TRUE){\n        c0 <- coxph(Surv(time, status) ~ 1, data = data.w1, method = \"breslow\")\n        sf0 <- survfit(c0)\n        Fw <- Fwindow(sf0, input$slider)\n        x <- seq(0,10,0.1)\n        plot(Fw$time, Fw$Fw, type=\"s\", col=\"red\",ylim = c(0, max(1 - ((1 - pweibull(x+w,sh,s))/(1 - pweibull(x,sh,s))),Fw$up)), main = paste(\"Probability of dying with a window of\", input$slider),\n             xlab = \"Time surviving\", ylab = \"Probability of dying\", lwd = 2)\n        curve(1 - (( 1 - pweibull(x+w,sh,s) ) / ( 1 - pweibull(x,sh,s)) ),add = TRUE,main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n      }\n      if (input$sim == FALSE){\n        curve(1 - (( 1 - pweibull(x+w,sh,s) ) / ( 1 - pweibull(x,sh,s)) ),main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n        \n      }\n    }\n    \n    if (input$radio == 3){\n      ##### Terminal hazard function (weibull(shape=sh, scale=s))\n      par(mfrow=c(2,2))\n      sh <- input$shape2\n      s <- input$scale2\n      p <- input$cen /100\n      \n      ## survival\n      # uniform upper bound Terminal scenario\n      ub.w2 <- function(s,sh,p){\n        n <- 100\n        d <- c(seq(0.01,10,0.01), seq(10.1,100,0.1), seq(101,1000,1))\n        pr <- numeric(1)\n        y <- numeric(n)\n        a <- 0\n        dnew <- 0\n        for(i in 1:2800){\n          for (j in 1:n){\n            y[j] <- runif(1,0,d[i])\n          }\n          pr <- sum(exp(-(y/s)^sh))/n\n          if ((abs(pr - p) < 0.05)){\n            dnew <- dnew + d[i]\n            a <- a + 1\n          }\n        }\n        dnew/a\n      }\n      b <- ub.w2(s, sh, p) # = b\n      # simulate survival data in the Terminal scenario\n      sim.w2 <- function(n,sh,s,b){\n        t <- rweibull(n,sh,s)     # sh and s are weibull parameters\n        c <- runif(n,0,b)   # b is uniform upper bound parameter\n        time <- apply(data.frame(t=t,c=c),1,min)\n        ind <- numeric(n)\n        for (i in 1:n){\n          if(time[i]==t[i]) ind[i] <- 1\n        }\n        p <- sum(1 - ind) / n  # p is censoring percentage\n        cat(\"censoring percentage is %\", p * 100 , sep= \"\", \"\\n\")\n        return(data = list(time = time, status = ind))\n      }\n      data.w2 <- sim.w2(input$s.size, sh, s, b=b)\n      km.w2 <- npsurv(Surv(time, status) ~ 1, data=data.w2) \n      \n      if (input$sim == TRUE){\n        survplot(km.w2,main=\"Survivor\",col=\"red\",xlab=\"Time\")  ## type=\"l\"\n        curve( ( 1 - pweibull(x,sh,s) ), add = TRUE, xlab=\"Time\",ylab=\"Probability\",lwd=2,ylim=c(0,1))\n      }\n      if (input$sim == FALSE){\n        curve( ( 1 - pweibull(x,sh,s) ), main=\"Survivor\", xlab=\"Time\",ylab=\"Survival Probability\",xlim=c(0,km.w2$maxtime),lwd=2,ylim=c(0,1))\n      }\n      \n      ## hazard\n      curve( dweibull(x,sh,s) / ( 1 - pweibull(x,sh,s) ) ,main=\"Hazard\",xlab=\"Time\",ylab=\"Risk\",lwd=2,xlim=c(0,2))\n      \n      ## MRL in the Terminal scenario\n      Emrl.w2<-function (u) {\n        nu<-integrate(function (x) ( 1 - pweibull(x,sh,s) ),u,Inf)$value   \n        de<-( 1 - pweibull(u,sh,s) )\n        if (de == 0) return(0)\n        nu/de\n      }\n      xx<-seq(0,2,length.out=100)\n      yy<-sapply(xx,Emrl.w2)\n      plot(xx,round(yy,4),type=\"l\",main=\"MRL\",xlab=\"Time\",ylab=\"Time remaining\",lwd=2,xlim=c(0,2))\n      \n      ## dynpred\n      w<-input$slider      \n      if (input$sim == TRUE){\n        c0 <- coxph(Surv(time, status) ~ 1, data = data.w2, method = \"breslow\")\n        sf0 <- survfit(c0)\n        Fw <- Fwindow(sf0, input$slider)\n        x <- seq(0,5,0.1)\n        plot(Fw$time, Fw$Fw, type=\"s\", col=\"red\",ylim = c(0, max(1 - ((1 - pweibull(x+w,sh,s))/(1 - pweibull(x,sh,s))),Fw$up)), main = paste(\"Probability of dying with a window of\", input$slider),\n             xlab = \"Time surviving\", ylab = \"Probability of dying\", lwd = 2)\n        curve(1 - (( 1 - pweibull(x+w,sh,s) ) / ( 1 - pweibull(x,sh,s)) ),add = TRUE,main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n      }\n      if (input$sim == FALSE){\n        curve(1 - (( 1 - pweibull(x+w,sh,s) ) / ( 1 - pweibull(x,sh,s)) ),main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n      }\n    }\n    \n    if (input$radio == 4){\n      ##### Infection hazard function (lnorm(meanlog=m, sdlog=sd))\n      par(mfrow=c(2,2))\n      m <- input$mean\n      sd <- input$sd\n      p <- input$cen /100\n      \n      ## survival\n      # uniform upper bound Terminal scenario\n      ub.ln <- function(m,sd,p){\n        n <- 100\n        d <- c(seq(0.1,100,0.1), seq(101,1000,1))\n        pr <- numeric(1)\n        y <- numeric(n)\n        a <- 0\n        dnew <- 0\n        pr <- numeric(length(d))\n        for(i in 1:length(d)){\n          y <- runif(n,0,d[i])\n          pr[i] <- sum(1/2 - (1/2 * erf((log(y) - m) / (sqrt(2) * sd))))/n\n          if ((abs(pr[i] - p) < 0.05)){\n            dnew <- dnew + d[i]\n            a <- a + 1\n          }\n        }\n        dnew/a\n      }\n      b <- ub.ln(m, sd, p) # = b\n      # simulate survival data in the Terminal scenario\n      sim.ln <- function(n,m,sd,b){\n        t <- rlnorm(n,m,sd)     # m and sd are log-normal parameters\n        c <- runif(n,0,b)   # b is uniform upper bound parameter\n        time <- apply(data.frame(t=t,c=c),1,min)\n        ind <- numeric(n)\n        for (i in 1:n){\n          if(time[i]==t[i]) ind[i] <- 1\n        }\n        p <- sum(1 - ind) / n  # p is censoring percentage\n        cat(\"censoring percentage is %\", p * 100 , sep= \"\", \"\\n\")\n        return(data = list(time = time, status = ind))\n      }\n      data.ln <- sim.ln(input$s.size, m, sd, b=b)\n      km.ln <- npsurv(Surv(time, status) ~ 1, data=data.ln) \n      \n      if (input$sim == TRUE){\n        survplot(km.ln,main=\"Survivor\",col=\"red\",xlab=\"Time\")  ## type=\"l\"\n        curve( ( 1 - plnorm(x,m,sd) ), add = TRUE, xlab=\"Time\",ylab=\"Probability\",lwd=2,ylim=c(0,1))\n      }\n      if (input$sim == FALSE){\n        curve( ( 1 - plnorm(x,m,sd) ), main=\"Survivor\", xlab=\"Time\",ylab=\"Survival Probability\",xlim=c(0,km.ln$maxtime),lwd=2,ylim=c(0,1))\n      }\n      \n      ## hazard\n      curve( dlnorm(x,m,sd) / ( 1 - plnorm(x,m,sd) ),main=\"Hazard\",xlab=\"Time\",ylab=\"Risk\",lwd=2,xlim=c(0,20))\n      \n      ## MRL in the Infection scenario\n      Emrl.ln<-function (u) {\n        nu<-integrate(function (x) ( 1 - plnorm(x,m,sd) ),u,Inf)$value   \n        de<-( 1 - plnorm(u,m,sd) )\n        if (de == 0) return(0)\n        nu/de\n      }\n      xx<-seq(0,20,length.out=100)\n      yy<-sapply(xx,Emrl.ln)\n      plot(xx,round(yy,4),type=\"l\",main=\"MRL\",xlab=\"Time\",ylab=\"Time remaining\",lwd=2)\n      \n      ## dynpred\n      w<-input$slider\n      \n      if (input$sim == TRUE){\n        c0 <- coxph(Surv(time, status) ~ 1, data = data.ln, method = \"breslow\")\n        sf0 <- survfit(c0)\n        Fw <- Fwindow(sf0, input$slider)\n        x <- seq(0,5,0.1)\n        plot(Fw$time, Fw$Fw, type=\"s\", col=\"red\",ylim = c(0, max(1 - ((1 - plnorm(x+w,m,sd))/(1 - plnorm(x,m,sd))),Fw$up)), main = paste(\"Probability of dying with a window of\", input$slider),\n             xlab = \"Time surviving\", ylab = \"Probability of dying\", lwd = 2)\n        curve(1 - ((1 - plnorm(x+w,m,sd))/(1 - plnorm(x,m,sd))),add = TRUE,main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n      }\n      if (input$sim == FALSE){\n        curve(1 - ((1 - plnorm(x+w,m,sd))/(1 - plnorm(x,m,sd))),main=paste(\"Probability of dying with window of\", w),\n              xlab=\"Time\",ylab=\"Probability\",lwd=2)\n        \n      }\n    }\n  })\n})\n\n",
    "created" : 1426074518062.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "14|29|43|2|\n",
    "hash" : "2013274541",
    "id" : "8EB364E6",
    "lastKnownWriteTime" : 1426074582,
    "path" : "C:/Users/13239018/Dropbox/Projects/MRL/Dynamic prediction/DynPred Shinyapp/shiny/server.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}